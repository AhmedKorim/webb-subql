type EdgeAddition @entity(immutable: true) {
  id: Bytes!
  chainID: BigInt! # uint256
  latestLeafIndex: BigInt! # uint256
  merkleRoot: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EdgeUpdate @entity(immutable: true) {
  id: Bytes!
  chainID: BigInt! # uint256
  latestLeafIndex: BigInt! # uint256
  merkleRoot: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Insertion @entity(immutable: true) {
  id: Bytes!
  commitment: BigInt! # uint256
  leafIndex: BigInt! # uint32
  timestamp: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type NewCommitment @entity(immutable: true) {
  id: Bytes!
  commitment: BigInt! # uint256
  subTreeIndex: BigInt! # uint256
  leafIndex: BigInt! # uint256
  encryptedOutput: Bytes! # bytes
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type NewNullifier @entity(immutable: true) {
  id: Bytes!
  nullifier: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PublicKey @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  key: Bytes! # bytes
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}



type Transfer @entity(immutable: true) {

  id: Bytes!
  from: Bytes! # addresss
  to: Bytes! # address
  value: BigInt! # uint256
  finalValue:BigInt! # value without fees
  fee:BigInt!

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  contractAddress:Bytes!
}

type DepositTx @entity(immutable: true) {
  id: Bytes!
  depositor:Bytes!
  # deposit amount
  value: BigInt! # uint256
  finalValue:BigInt! # value without fees
  fee:BigInt!

  blockTimestamp: BigInt!
  transactionHash: Bytes!

  vAnchorAddress:Bytes!
  fungibleTokenWrapper:Bytes!
  blockNumber: BigInt!


}

type WithdrawTx @entity(immutable: true) {
  id: Bytes!
  beneficiary:Bytes!
  # deposit amount
  value: BigInt! # uint256
  finalValue:BigInt! # value without fees
  fee:BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  vAnchorAddress:Bytes!
  fungibleTokenWrapper:Bytes!

  blockNumber: BigInt!


}

type VAnchor @entity(immutable: false) {
  id: Bytes!
  chainId:BigInt!
  contractAddress:Bytes!
  valueLocked:BigInt!
  finalValueLocked:BigInt!
  totalFees:BigInt!
}


type Deploy @entity(immutable: true) {
  id: Bytes!
  addr: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
type Deploy @entity(immutable: true) {
  id: Bytes!
  addr: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
